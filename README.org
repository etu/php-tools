[[https://travis-ci.org/etu/php-tools][https://travis-ci.org/etu/php-tools.svg?branch=master]]

* Install with composer:
composer.json
#+NAME: composer.json
#+BEGIN_SRC json
{
    "require": {
        "etu/php-tools": "dev-master"
    }
}
#+END_SRC

* Example usage of Config and Db

config.ini
#+NAME: config.ini
#+BEGIN_SRC ini
[@]
db.dsn = 'sqlite::memory:'
db.username =
db.password =

[example.com]
db.username = live

[*.dev.example.com]
db.username = dev
#+END_SRC

or

config.json
#+NAME: config.json
#+BEGIN_SRC json
{
    "@": {
        "db": {
            "dsn": "sqlite::memory:",
            "username": "",
            "password": ""
        }
    },

    "example.com": {
        "db": {
            "username": "live"
        }
    },

    "*.dev.example.com": {
        "db": {
            "username": "dev"
        }
    }
}
#+END_SRC

test.php
#+NAME: test.php
#+BEGIN_SRC php
<?php
require('vendor/autoload.php');

// If using INI-file:
// (Optional) Second parameter matches title in ini-file
$config = new Etu\PhpTools\IniConfig('config.ini', 'optional.example.com');

// If using JSON-file
// (Optional) Second parameter matches first level of objects in json-file
$config = new Etu\PhpTools\JsonConfig('config.json', 'optional.example.com');

// Then load Db
$db = new Etu\PhpTools\Db($config, new Etu\PhpTools\Db\PdoBackend());

$db->query('CREATE TABLE names(id INTEGER PRIMARY KEY, name VARCHAR(10));');
$db->query('INSERT INTO names(id, name) VALUES (NULL, "Alice");');
$db->query('INSERT INTO names(id, name) VALUES (NULL, "Bob");');

print_r(
    $db->query(
        'SELECT * FROM names WHERE name = :name',
        [':name' => 'Alice']
    )->fetchAll()
);
#+END_SRC

* Advanced features of JsonConfig
  - Modules
  - Default settings
  - Environments
  - Overwrites of default settings depending on environment
  - Overwrites of modules

** Modules
Example usage of modules and overwriting including defaults:
#+NAME: modules.json
#+BEGIN_SRC json
{
    "__modules__": {
        "my-db-module": {
            "db": {
                "username": "default",
                "password": "default"
            }
        }
    },

    "@": {
        "default": "values"
    },

    "example.com": {
        "__loaded_modules__": [
            "my-db-module"
        ],

        "db": {
            "username": "example.com"
        }
    }
}
#+END_SRC

This will result in a config that looks like this (if loading the environment example.com):
:  (object) [
:     'default' => 'values',
:     'db' => (object) [
:         'username' => 'example.com',
:         'password' => 'default
:     ]
:  ]
